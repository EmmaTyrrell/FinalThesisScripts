# By Emma Tyrrell
# Completed August 22, 2023 for Master's Thesis in Spatial Data Science
# at Penn State University.

# Description: This script takes a shapefile of natural avalanches along
# highway avalanche paths and analyzes meteorological data up until a
# week prior to the event. This script then analyzes trends that will
# then be used for a forecasting model.

# Data sources: Colorado Avalanche Information Center, National Oceanic
# and Atmospheric Association - High-Resolution Rapid Refresh Model,
# Esri ArcGIS Pro.

# import modules
import arcpy
import os
from arcpy.sa import *
from datetime import timedelta
from datetime import datetime as dt
print("modules imported")

# import parameters
arcpy.env.workspace = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData"
avyGDB = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData\\AvalancheFiles.gdb"
sampledGDB = "D:\\PSU_Thesis_Data\\IntermediaryProcessingFiles\\HighwayAvy_Sampled.gdb"
HRRRData = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData\\HRRRData"
AvyDataWorkspace = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData\\AvyData\\Highway_AvyDaysData"
AnalysisData = "D:\\PSU_Thesis_Data\\IntermediaryProcessingFiles\\Highway_AnalysisData"
analysisGDB = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData\\HighwayAvy_AnalysisData.gdb"
arcpy.env.overwriteOutput = True
arcpy.env.qualifiedFieldNames = False
avalancheData = "C:\\Users\\Emma Tyrrell\\Documents\\PSU_SDS\\THESIS_230226\\Data\\WorkingData\\AvalancheFiles.gdb\\AvalanchePoints_Natural_CopiedToFinal"
UTCtimeConversion = timedelta(hours=-7)
print("parameters established")

print("prepping date fields ...")
# add field that will be in accordance with the date field
try:
    arcpy.AddField_management(avalancheData, "AvyDtTm", "TEXT", "", "", "50", "AvyDtTm", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "Analysis_Dt", "TEXT", "", "", "50", "Analysis_Dt", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "Select_Dt", "TEXT", "", "", "50", "Select_Dt", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdStart", "TEXT", "", "", "50", "StdStart", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay0", "TEXT", "", "", "50", "StdDay0", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_1", "TEXT", "", "", "50", "StdDay_1", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_2", "TEXT", "", "", "50", "StdDay_2", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_3", "TEXT", "", "", "50", "StdDay_3", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_4", "TEXT", "", "", "50", "StdDay_4", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_5", "TEXT", "", "", "50", "StdDay_5", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_6", "TEXT", "", "", "50", "StdDay_6", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "StdDay_7", "TEXT", "", "", "50", "StdDay_7", "", "REQUIRED")
    arcpy.AddField_management(avalancheData, "Unique_Num", "TEXT", "", "", "50", "Unique_Num", "", "REQUIRED")
    print("- date fields added")

    # get date field for avalanche data 1
    fc = avalancheData
    fields = ["_avalanche_date", "Analysis_Dt", "Select_Dt", "StdStart", "StdDay0", "StdDay_1", "StdDay_2", "StdDay_3",
              "StdDay_4", "StdDay_5", "StdDay_6", "StdDay_7", "OBJECTID", "Unique_Num", "AvyDtTm"]
    with arcpy.da.UpdateCursor(avalancheData, fields) as cursor:
        for row in cursor:
            row2 = str(row[1])
            row[2] = f"{row2[:-9]} 00:00:00"
            cursor.updateRow(row)
            row[3] = row[2]
            cursor.updateRow(row)
            row[3] = dt.strptime(row[3], "%Y-%m-%d %H:%M:%S")
            cursor.updateRow(row)
            row[3] = row[3] + UTCtimeConversion
            cursor.updateRow(row)
            row[4] = row[3] + timedelta(days=1)
            row[5] = row[3] + timedelta(days=-1)
            row[6] = row[3] + timedelta(days=-2)
            row[7] = row[3] + timedelta(days=-3)
            row[8] = row[3] + timedelta(days=-4)
            row[9] = row[3] + timedelta(days=-5)
            row[10] = row[3] + timedelta(days=-6)
            row[11] = row[3] + timedelta(days=-7)
            cursor.updateRow(row)
            row[3] = (str(row[3]).replace(" ", "T"))
            row[4] = (str(row[4]).replace(" ", "T"))
            row[5] = (str(row[5]).replace(" ", "T"))
            row[6] = (str(row[6]).replace(" ", "T"))
            row[7] = (str(row[7]).replace(" ", "T"))
            row[8] = (str(row[8]).replace(" ", "T"))
            row[9] = (str(row[9]).replace(" ", "T"))
            row[10] = (str(row[10]).replace(" ", "T"))
            row[11] = (str(row[11]).replace(" ", "T"))
            cursor.updateRow(row)
            row[13] = (str(row[2])[:-9]) + "_" + str(row[12])
            row[14] = dt.strptime(str(row[1]), "%Y-%m-%d %H:%M:%S")
            cursor.updateRow(row)
            row[14] = row[14] + UTCtimeConversion
            cursor.updateRow(row)
    print("- date fields updated")
except Exception as ex:
    print(ex)

print("creating shapefiles ...")
# make shapefiles for avalanches
try:
    try:
        start_date = dt(2018, 1, 1)
        end_date = dt(2018, 2, 28)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2018\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2018 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2018:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2018"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
    # make 2019 shapefiles for avalanches
    try:
        start_date = dt(2019, 1, 1)
        end_date = dt(2019, 2, 28)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2019\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2019 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2019:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2019"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
    # make 2020 shapefiles for avalanches
    try:
        start_date = dt(2020, 1, 1)
        end_date = dt(2020, 2, 29)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2020\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2020 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2020:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2020"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
    # make 2021 shapefiles for avalanches
    try:
        start_date = dt(2021, 1, 1)
        end_date = dt(2021, 2, 28)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2021\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2021 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2021:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2021"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
    # make 2022 shapefiles for avalanches
    try:
        start_date = dt(2022, 1, 1)
        end_date = dt(2022, 2, 28)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2022\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2022 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2022:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2022"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
    # make 2022 shapefiles for avalanches
    try:
        start_date = dt(2023, 1, 1)
        end_date = dt(2023, 2, 28)
        delta = timedelta(days=1)
        while start_date <= end_date:
            where_clause = f"""Select_Dt = '{start_date}'"""
            timeSelect = f"{start_date}"
            dateFeatures = arcpy.SelectLayerByAttribute_management(avalancheData, "NEW_SELECTION", where_clause)
            if int(arcpy.GetCount_management(dateFeatures).getOutput(0)) > 0:
                arcpy.CopyFeatures_management(dateFeatures, (AvyDataWorkspace + "\\2023\\" + f"{timeSelect[:-9]}.shp"))
                print("copied")
            start_date += delta
        print("2022 files created")

        arcpy.env.workspace = AvyDataWorkspace + "\\2023"
        avyFiles2023 = arcpy.ListFeatureClasses()
        for avyFile in avyFiles2023:
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.SplitByAttributes_analysis(avyFile, (AvyDataWorkspace + "\\2023"), "Unique_Num")
                print("duplicates split")
            if int(arcpy.GetCount_management(avyFile).getOutput(0)) > 1:
                arcpy.Delete_management(avyFile)
                print("files with more than one file deleted")
    except Exception as ex:
        print(ex)
except Exception as ex:
    print(ex)

print("sampling 2018 data ...")
# 2018 days 0-7 sample
try:
    meanHRRRFile18 = HRRRData + "\\2018\\2018meanHRRRVariables.crf"
    minHRRRFile18 = HRRRData + "\\2018\\2018minHRRRVariables.crf"
    maxHRRRFile18 = HRRRData + "\\2018\\2018maxHRRRVariables.crf"
    sumHRRRFile18 = HRRRData + "\\2018\\2018sumHRRRVariables.crf"
    windHRRRFile18_Z = HRRRData + "\\2018\\2018windHRRRVariables_z10.crf"
    # day 0
    try:
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day0"
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        for avyFile2018 in avyFiles2018:
            with arcpy.da.SearchCursor(avyFile2018, ["StdStart", "StdDay0"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day0_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay0.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day0_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MinSampledDay0.shp day of min sampled")
                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day0_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MaxSampledDay0.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day0_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_SumSampledDay0.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day0_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay0.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day0MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day0MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day0MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day0MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day0MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day0MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day0SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day0SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day0WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day0WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day0MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day0MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day0MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day0SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day0WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day0MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day0MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day0MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day0SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day0WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
            print("fields renamed for 2018 shapefiles")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 0 done. Moving on to Day 1 ...")
    # day 1
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day1"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdStart", "StdDay_1"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day1_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay1.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day1_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay1.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day1_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay1.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day1_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay1.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day1_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay1.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day1MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day1MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day1MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day1MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day1MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day1MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day1SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day1SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day1WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day1WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day1MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day1MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day1MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day1SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day1WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day1MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day1MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day1MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day1SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day1WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
            print("2018 Day 1 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 1 done. Moving on to Day 2 ... ")
    # day 2
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day2"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_1", "StdDay_2"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day2_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay2.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day2_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay2.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day2_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay2.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day2_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay2.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day2_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay2.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day2MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day2MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day2MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day2MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day2MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day2MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day2SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day2SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day2WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day2WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day2MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day2MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day2MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day2SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day2WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day2MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day2MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day2MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day2SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day2WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
            print("2018 Day 2 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 2 done. Moving on to Day 3 ... ")
    # day 3
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day3"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_2", "StdDay_3"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day3_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay3.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day3_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay3.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day3_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay3.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day3_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay3.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day3_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay3.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day3MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day3MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day3MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day3MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day3MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day3MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day3SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day3SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day3WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day3WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day3MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day3MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day3MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day3SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day3WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day3MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day3MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day3MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day3SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day3WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind", field.name + "_wind")
            print("2018 Day 3 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 3 done. Moving on to Day 4 ... ")
    # day 4
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day4"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_3", "StdDay_4"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day4_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay4.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day4_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay4.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day4_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay4.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day4_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay4.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day4_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay4.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day4MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day4MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day4MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day4MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day4MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day4MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day4SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day4SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day4WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day4WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day4MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day4MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day4MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day4SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day4WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day4MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day4MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day4MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day4SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day4WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("field names renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 4 done. Moving on to Day 5 ... ")
    # day 5
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day5"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_4", "StdDay_5"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day5_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay5.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day5_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay5.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day5_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay5.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day5_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay5.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day5_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay5.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day5MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day5MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day5MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day5MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day5MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day5MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day5SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day5SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day5WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day5WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day5MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day5MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day5MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day5SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day5WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day5MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day5MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day5MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day5SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day5WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 5 done. Moving on to Day 6 ... ")
    # day 6
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day6"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_5", "StdDay_6"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day6_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay6.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day6_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay6.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day6_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay6.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day6_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay6.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day6_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay6.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day6MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day6MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day6MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day6MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day6MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day6MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day6SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day6SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day6WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day6WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day6MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day6MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day6MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day6SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day6WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day6MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day6MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day6MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day6SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day6WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2018 Day 6 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 6 done. Moving on to Day 7 ... ")
    # day 7
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2018"
        avyFiles2018 = arcpy.ListFeatureClasses()
        Sampled2018 = AvyDataWorkspace + "\\2018"
        Sampled2018DayX = Sampled2018 + "\\Day7"
        merged = Sampled2018
        for avyFile2018 in avyFiles2018:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2018, ["StdDay_6", "StdDay_7"]) as cursor:
                for row in cursor:
                    meanSampled_2018 = Sampled2018DayX + "\\MeanVar\\" + f"Day7_MeanVar_{avyFile2018}"
                    Sample(meanHRRRFile18, avyFile2018, meanSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay7.shp day of mean sampled")

                    minSampled_2018 = Sampled2018DayX + "\\MinVar\\" + f"Day7_MinVar_{avyFile2018}"
                    Sample(minHRRRFile18, avyFile2018, minSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay7.shp day of min sampled")

                    maxSampled_2018 = Sampled2018DayX + "\\MaxVar\\" + f"Day7_MaxVar_{avyFile2018}"
                    Sample(maxHRRRFile18, avyFile2018, maxSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay7.shp day of max sampled")

                    sumSampled_2018 = Sampled2018DayX + "\\SumVar\\" + f"Day7_SumVar_{avyFile2018}"
                    Sample(sumHRRRFile18, avyFile2018, sumSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay7.shp day of sum sampled")

                    windSampled_2018 = Sampled2018DayX + "\\WindVar\\" + f"Day7_WindVar_{avyFile2018}"
                    Sample(windHRRRFile18_Z, avyFile2018, windSampled_2018, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2018}_MeanSampledDay7.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2018, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2018, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2018[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2018, "FID", avyFile2018, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2018 Day 0
            mean_merged = Sampled2018DayX + "\\2018_Day7MeanVar_merged.shp"
            mean_path = Sampled2018DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2018DayX, "2018_Day7MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2018DayX + "\\2018_Day7MinVar_merged.shp"
            min_path = Sampled2018DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2018DayX, "2018_Day7MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2018DayX + "\\2018_Day7MaxVar_merged.shp"
            max_path = Sampled2018DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2018DayX, "2018_Day7MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2018DayX + "\\2018_Day7SumVar_merged.shp"
            sum_path = Sampled2018DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2018DayX, "2018_Day7SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2018DayX + "\\2018_Day7WindVar_merged.shp"
            wind_path = Sampled2018DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2018DayX, "2018_Day7WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2018DayX + "\\2018_Day7MeanVar_merged.shp"
            min_merged = Sampled2018DayX + "\\2018_Day7MinVar_merged.shp"
            max_merged = Sampled2018DayX + "\\2018_Day7MaxVar_merged.shp"
            sum_merged = Sampled2018DayX + "\\2018_Day7SumVar_merged.shp"
            wind_merged = Sampled2018DayX + "\\2018_Day7WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2018 = sampledGDB + "\\T2018_Day7MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2018)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2018, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2018 = sampledGDB + "\\T2018_Day7MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2018)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2018, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2018 = sampledGDB + "\\T2018_Day7MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2018)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2018, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2018 = sampledGDB + "\\T2018_Day7SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2018)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2018, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2018 = sampledGDB + "\\T2018_Day7WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2018)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2018, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2018 Day 7 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 7 done. 2018 is done. Moving on to 2019")
except Exception as ex:
    print(ex)

print("sampling 2019 data ...")
# 2019 days 0-7 sample
try:
    meanHRRRFile19 = HRRRData + "\\2019\\2019meanHRRRVariables.crf"
    minHRRRFile19 = HRRRData + "\\2019\\2019minHRRRVariables.crf"
    maxHRRRFile19 = HRRRData + "\\2019\\2019maxHRRRVariables.crf"
    sumHRRRFile19 = HRRRData + "\\2019\\2019sumHRRRVariables.crf"
    windHRRRFile19_Z = HRRRData + "\\2019\\2019windHRRRVariables_z10.crf"
    # day 0
    try:
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day0"
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        for avyFile2019 in avyFiles2019:
            with arcpy.da.SearchCursor(avyFile2019, ["StdStart", "StdDay0"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day0_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay0.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day0_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MinSampledDay0.shp day of min sampled")
                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day0_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MaxSampledDay0.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day0_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_SumSampledDay0.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day0_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay0.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day0MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day0MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day0MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day0MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day0MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day0MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day0SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day0SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day0WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day0WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day0MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day0MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day0MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day0SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day0WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day0MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day0MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day0MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day0SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day0WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
            print("fields renamed for 2019 shapefiles")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 0 done. Moving on to Day 1 ...")
    # day 1
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day1"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdStart", "StdDay_1"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day1_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay1.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day1_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay1.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day1_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay1.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day1_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay1.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day1_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay1.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day1MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day1MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day1MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day1MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day1MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day1MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day1SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day1SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day1WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day1WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day1MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day1MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day1MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day1SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day1WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day1MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day1MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day1MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day1SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day1WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
            print("2019 Day 1 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 1 done. Moving on to Day 2 ... ")
    # day 2
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day2"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_1", "StdDay_2"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day2_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay2.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day2_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay2.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day2_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay2.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day2_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay2.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day2_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay2.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day2MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day2MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day2MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day2MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day2MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day2MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day2SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day2SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day2WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day2WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day2MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day2MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day2MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day2SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day2WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day2MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day2MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day2MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day2SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day2WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
            print("2019 Day 2 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 2 done. Moving on to Day 3 ... ")
    # day 3
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day3"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_2", "StdDay_3"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day3_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay3.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day3_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay3.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day3_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay3.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day3_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay3.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day3_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay3.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day3MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day3MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day3MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day3MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day3MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day3MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day3SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day3SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day3WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day3WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day3MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day3MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day3MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day3SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day3WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day3MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day3MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day3MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day3SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day3WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind", field.name + "_wind")
            print("2019 Day 3 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 3 done. Moving on to Day 4 ... ")
    # day 4
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day4"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_3", "StdDay_4"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day4_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay4.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day4_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay4.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day4_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay4.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day4_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay4.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day4_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay4.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day4MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day4MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day4MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day4MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day4MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day4MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day4SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day4SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day4WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day4WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day4MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day4MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day4MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day4SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day4WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day4MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day4MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day4MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day4SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day4WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("field names renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 4 done. Moving on to Day 5 ... ")
    # day 5
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day5"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_4", "StdDay_5"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day5_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay5.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day5_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay5.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day5_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay5.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day5_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay5.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day5_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay5.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day5MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day5MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day5MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day5MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day5MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day5MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day5SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day5SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day5WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day5WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day5MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day5MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day5MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day5SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day5WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day5MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day5MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day5MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day5SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day5WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 5 done. Moving on to Day 6 ... ")
    # day 6
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day6"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_5", "StdDay_6"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day6_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay6.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day6_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay6.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day6_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay6.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day6_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay6.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day6_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay6.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day6MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day6MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day6MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day6MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day6MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day6MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day6SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day6SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day6WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day6WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day6MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day6MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day6MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day6SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day6WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day6MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day6MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day6MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day6SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day6WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2019 Day 6 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 6 done. Moving on to Day 7 ... ")
    # day 7
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2019"
        avyFiles2019 = arcpy.ListFeatureClasses()
        Sampled2019 = AvyDataWorkspace + "\\2019"
        Sampled2019DayX = Sampled2019 + "\\Day7"
        merged = Sampled2019
        for avyFile2019 in avyFiles2019:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2019, ["StdDay_6", "StdDay_7"]) as cursor:
                for row in cursor:
                    meanSampled_2019 = Sampled2019DayX + "\\MeanVar\\" + f"Day7_MeanVar_{avyFile2019}"
                    Sample(meanHRRRFile19, avyFile2019, meanSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay7.shp day of mean sampled")

                    minSampled_2019 = Sampled2019DayX + "\\MinVar\\" + f"Day7_MinVar_{avyFile2019}"
                    Sample(minHRRRFile19, avyFile2019, minSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay7.shp day of min sampled")

                    maxSampled_2019 = Sampled2019DayX + "\\MaxVar\\" + f"Day7_MaxVar_{avyFile2019}"
                    Sample(maxHRRRFile19, avyFile2019, maxSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay7.shp day of max sampled")

                    sumSampled_2019 = Sampled2019DayX + "\\SumVar\\" + f"Day7_SumVar_{avyFile2019}"
                    Sample(sumHRRRFile19, avyFile2019, sumSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay7.shp day of sum sampled")

                    windSampled_2019 = Sampled2019DayX + "\\WindVar\\" + f"Day7_WindVar_{avyFile2019}"
                    Sample(windHRRRFile19_Z, avyFile2019, windSampled_2019, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2019}_MeanSampledDay7.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2019, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2019, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2019[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2019, "FID", avyFile2019, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2019 Day 0
            mean_merged = Sampled2019DayX + "\\2019_Day7MeanVar_merged.shp"
            mean_path = Sampled2019DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2019DayX, "2019_Day7MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2019DayX + "\\2019_Day7MinVar_merged.shp"
            min_path = Sampled2019DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2019DayX, "2019_Day7MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2019DayX + "\\2019_Day7MaxVar_merged.shp"
            max_path = Sampled2019DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2019DayX, "2019_Day7MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2019DayX + "\\2019_Day7SumVar_merged.shp"
            sum_path = Sampled2019DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2019DayX, "2019_Day7SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2019DayX + "\\2019_Day7WindVar_merged.shp"
            wind_path = Sampled2019DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2019DayX, "2019_Day7WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2019DayX + "\\2019_Day7MeanVar_merged.shp"
            min_merged = Sampled2019DayX + "\\2019_Day7MinVar_merged.shp"
            max_merged = Sampled2019DayX + "\\2019_Day7MaxVar_merged.shp"
            sum_merged = Sampled2019DayX + "\\2019_Day7SumVar_merged.shp"
            wind_merged = Sampled2019DayX + "\\2019_Day7WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2019 = sampledGDB + "\\T2019_Day7MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2019)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2019, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2019 = sampledGDB + "\\T2019_Day7MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2019)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2019, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2019 = sampledGDB + "\\T2019_Day7MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2019)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2019, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2019 = sampledGDB + "\\T2019_Day7SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2019)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2019, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2019 = sampledGDB + "\\T2019_Day7WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2019)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2019, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2019 Day 7 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 7 done. 2019 is done. Moving on to 2019")
except Exception as ex:
    print(ex)

print("sampling 2020 data ...")
# 2020 days 0-7 sample
try:
    meanHRRRFile20 = HRRRData + "\\2020\\2020meanHRRRVariables.crf"
    minHRRRFile20 = HRRRData + "\\2020\\2020minHRRRVariables.crf"
    maxHRRRFile20 = HRRRData + "\\2020\\2020maxHRRRVariables.crf"
    sumHRRRFile20 = HRRRData + "\\2020\\2020sumHRRRVariables.crf"
    windHRRRFile20_Z = HRRRData + "\\2020\\2020windHRRRVariables_z10.crf"
    # day 0
    try:
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day0"
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        for avyFile2020 in avyFiles2020:
            with arcpy.da.SearchCursor(avyFile2020, ["StdStart", "StdDay0"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day0_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay0.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day0_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MinSampledDay0.shp day of min sampled")
                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day0_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MaxSampledDay0.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day0_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_SumSampledDay0.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day0_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay0.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day0MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day0MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day0MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day0MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day0MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day0MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day0SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day0SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day0WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day0WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day0MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day0MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day0MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day0SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day0WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day0MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day0MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day0MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day0SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day0WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
            print("fields renamed for 2020 shapefiles")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 0 done. Moving on to Day 1 ...")
    # day 1
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day1"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdStart", "StdDay_1"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day1_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay1.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day1_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay1.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day1_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay1.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day1_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay1.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day1_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay1.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day1MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day1MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day1MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day1MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day1MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day1MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day1SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day1SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day1WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day1WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day1MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day1MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day1MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day1SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day1WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day1MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day1MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day1MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day1SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day1WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
            print("2020 Day 1 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 1 done. Moving on to Day 2 ... ")
    # day 2
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day2"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_1", "StdDay_2"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day2_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay2.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day2_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay2.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day2_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay2.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day2_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay2.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day2_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay2.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day2MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day2MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day2MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day2MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day2MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day2MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day2SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day2SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day2WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day2WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day2MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day2MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day2MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day2SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day2WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day2MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day2MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day2MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day2SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day2WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
            print("2020 Day 2 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 2 done. Moving on to Day 3 ... ")
    # day 3
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day3"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_2", "StdDay_3"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day3_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay3.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day3_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay3.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day3_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay3.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day3_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay3.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day3_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay3.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day3MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day3MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day3MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day3MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day3MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day3MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day3SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day3SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day3WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day3WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day3MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day3MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day3MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day3SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day3WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day3MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day3MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day3MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day3SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day3WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind", field.name + "_wind")
            print("2020 Day 3 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 3 done. Moving on to Day 4 ... ")
    # day 4
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day4"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_3", "StdDay_4"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day4_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay4.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day4_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay4.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day4_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay4.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day4_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay4.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day4_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay4.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day4MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day4MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day4MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day4MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day4MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day4MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day4SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day4SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day4WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day4WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day4MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day4MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day4MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day4SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day4WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day4MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day4MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day4MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day4SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day4WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("field names renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 4 done. Moving on to Day 5 ... ")
    # day 5
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day5"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_4", "StdDay_5"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day5_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay5.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day5_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay5.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day5_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay5.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day5_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay5.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day5_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay5.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day5MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day5MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day5MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day5MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day5MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day5MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day5SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day5SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day5WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day5WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day5MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day5MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day5MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day5SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day5WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day5MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day5MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day5MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day5SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day5WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 5 done. Moving on to Day 6 ... ")
    # day 6
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day6"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_5", "StdDay_6"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day6_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay6.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day6_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay6.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day6_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay6.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day6_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay6.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day6_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay6.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day6MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day6MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day6MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day6MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day6MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day6MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day6SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day6SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day6WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day6WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day6MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day6MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day6MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day6SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day6WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day6MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day6MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day6MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day6SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day6WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2020 Day 6 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 6 done. Moving on to Day 7 ... ")
    # day 7
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2020"
        avyFiles2020 = arcpy.ListFeatureClasses()
        Sampled2020 = AvyDataWorkspace + "\\2020"
        Sampled2020DayX = Sampled2020 + "\\Day7"
        merged = Sampled2020
        for avyFile2020 in avyFiles2020:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2020, ["StdDay_6", "StdDay_7"]) as cursor:
                for row in cursor:
                    meanSampled_2020 = Sampled2020DayX + "\\MeanVar\\" + f"Day7_MeanVar_{avyFile2020}"
                    Sample(meanHRRRFile20, avyFile2020, meanSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay7.shp day of mean sampled")

                    minSampled_2020 = Sampled2020DayX + "\\MinVar\\" + f"Day7_MinVar_{avyFile2020}"
                    Sample(minHRRRFile20, avyFile2020, minSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay7.shp day of min sampled")

                    maxSampled_2020 = Sampled2020DayX + "\\MaxVar\\" + f"Day7_MaxVar_{avyFile2020}"
                    Sample(maxHRRRFile20, avyFile2020, maxSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay7.shp day of max sampled")

                    sumSampled_2020 = Sampled2020DayX + "\\SumVar\\" + f"Day7_SumVar_{avyFile2020}"
                    Sample(sumHRRRFile20, avyFile2020, sumSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay7.shp day of sum sampled")

                    windSampled_2020 = Sampled2020DayX + "\\WindVar\\" + f"Day7_WindVar_{avyFile2020}"
                    Sample(windHRRRFile20_Z, avyFile2020, windSampled_2020, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2020}_MeanSampledDay7.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2020, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2020, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2020[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2020, "FID", avyFile2020, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2020 Day 0
            mean_merged = Sampled2020DayX + "\\2020_Day7MeanVar_merged.shp"
            mean_path = Sampled2020DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2020DayX, "2020_Day7MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2020DayX + "\\2020_Day7MinVar_merged.shp"
            min_path = Sampled2020DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2020DayX, "2020_Day7MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2020DayX + "\\2020_Day7MaxVar_merged.shp"
            max_path = Sampled2020DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2020DayX, "2020_Day7MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2020DayX + "\\2020_Day7SumVar_merged.shp"
            sum_path = Sampled2020DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2020DayX, "2020_Day7SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2020DayX + "\\2020_Day7WindVar_merged.shp"
            wind_path = Sampled2020DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2020DayX, "2020_Day7WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2020DayX + "\\2020_Day7MeanVar_merged.shp"
            min_merged = Sampled2020DayX + "\\2020_Day7MinVar_merged.shp"
            max_merged = Sampled2020DayX + "\\2020_Day7MaxVar_merged.shp"
            sum_merged = Sampled2020DayX + "\\2020_Day7SumVar_merged.shp"
            wind_merged = Sampled2020DayX + "\\2020_Day7WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2020 = sampledGDB + "\\T2020_Day7MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2020)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2020, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2020 = sampledGDB + "\\T2020_Day7MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2020)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2020, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2020 = sampledGDB + "\\T2020_Day7MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2020)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2020, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2020 = sampledGDB + "\\T2020_Day7SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2020)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2020, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2020 = sampledGDB + "\\T2020_Day7WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2020)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2020, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2020 Day 7 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 7 done. 2020 is done. Moving on to 2020")
except Exception as ex:
    print(ex)

print("sampling 2021 data ...")
# 2021 days 0-7 sample
try:
    meanHRRRFile21 = HRRRData + "\\2021\\2021meanHRRRVariables.crf"
    minHRRRFile21 = HRRRData + "\\2021\\2021minHRRRVariables.crf"
    maxHRRRFile21 = HRRRData + "\\2021\\2021maxHRRRVariables.crf"
    sumHRRRFile21 = HRRRData + "\\2021\\2021sumHRRRVariables.crf"
    windHRRRFile21 = HRRRData + "\\2021\\2021windHRRRVariables.crf"
    windHRRRFile21_Z = HRRRData + "\\2021\\2021windHRRRVariables_z10.crf"
    # day 0
    try:
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day0"
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        for avyFile2021 in avyFiles2021:
            with arcpy.da.SearchCursor(avyFile2021, ["StdStart", "StdDay0"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day0_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay0.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day0_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MinSampledDay0.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day0_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MaxSampledDay0.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day0_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_SumSampledDay0.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day0_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay0.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day0MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day0MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day0MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day0MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day0MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day0MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day0SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day0SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day0WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day0WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day0MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day0MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day0MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day0SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day0WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day0MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day0MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day0MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day0SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day0WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
            print("fields renamed for 2021 shapefiles")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 0 done. Moving on to Day 1 ...")
    # day 1
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day1"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdStart", "StdDay_1"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day1_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay1.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day1_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay1.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day1_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay1.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day1_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay1.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day1_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay1.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day1MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day1MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day1MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day1MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day1MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day1MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day1SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day1SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day1WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day1WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day1MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day1MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day1MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day1SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day1WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day1MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day1MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day1MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day1SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day1WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
            print("2021 Day 1 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 1 done. Moving on to Day 2 ... ")
    # day 2
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day2"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_1", "StdDay_2"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day2_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay2.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day2_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay2.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day2_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay2.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day2_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay2.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day2_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay2.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day2MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day2MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day2MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day2MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day2MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day2MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day2SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day2SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day2WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day2WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day2MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day2MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day2MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day2SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day2WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day2MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day2MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day2MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day2SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day2WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
            print("2021 Day 2 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 2 done. Moving on to Day 3 ... ")
    # day 3
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day3"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 3
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_2", "StdDay_3"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day3_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay3.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day3_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay3.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day3_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay3.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day3_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay3.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day3_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay3.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day3MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day3MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day3MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day3MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day3MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day3MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day3SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day3SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day3WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day3WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day3MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day3MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day3MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day3SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day3WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day3MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day3MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day3MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day3SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day3WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind", field.name + "_wind")
            print("2021 Day 3 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 3 done. Moving on to Day 4 ... ")
    # day 4
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day4"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_3", "StdDay_4"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day4_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay4.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day4_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay4.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day4_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay4.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day4_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay4.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day4_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay4.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day4MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day4MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day4MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day4MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day4MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day4MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day4SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day4SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day4WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day4WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day4MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day4MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day4MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day4SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day4WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day4MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day4MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day4MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day4SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day4WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("field names renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 4 done. Moving on to Day 5 ... ")
    # day 5
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day5"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_4", "StdDay_5"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day5_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay5.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day5_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay5.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day5_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay5.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day5_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay5.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day5_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay5.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day5MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day5MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day5MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day5MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day5MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day5MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day5SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day5SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day5WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day5WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day5MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day5MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day5MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day5SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day5WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day5MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day5MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day5MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day5SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day5WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 5 done. Moving on to Day 6 ... ")
    # day 6
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day6"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_5", "StdDay_6"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day6_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay6.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day6_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay6.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day6_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay6.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day6_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay6.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day6_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay6.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day6MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day6MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day6MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day6MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day6MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day6MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day6SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day6SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day6WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day6WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day6MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day6MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day6MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day6SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day6WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day6MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day6MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day6MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day6SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day6WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2021 Day 6 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 6 done. Moving on to Day 7 ... ")
    # day 7
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2021"
        avyFiles2021 = arcpy.ListFeatureClasses()
        Sampled2021 = AvyDataWorkspace + "\\2021"
        Sampled2021DayX = Sampled2021 + "\\Day7"
        merged = Sampled2021
        for avyFile2021 in avyFiles2021:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2021, ["StdDay_6", "StdDay_7"]) as cursor:
                for row in cursor:
                    meanSampled_2021 = Sampled2021DayX + "\\MeanVar\\" + f"Day7_MeanVar_{avyFile2021}"
                    Sample(meanHRRRFile21, avyFile2021, meanSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay7.shp day of mean sampled")

                    minSampled_2021 = Sampled2021DayX + "\\MinVar\\" + f"Day7_MinVar_{avyFile2021}"
                    Sample(minHRRRFile21, avyFile2021, minSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay7.shp day of min sampled")

                    maxSampled_2021 = Sampled2021DayX + "\\MaxVar\\" + f"Day7_MaxVar_{avyFile2021}"
                    Sample(maxHRRRFile21, avyFile2021, maxSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay7.shp day of max sampled")

                    sumSampled_2021 = Sampled2021DayX + "\\SumVar\\" + f"Day7_SumVar_{avyFile2021}"
                    Sample(sumHRRRFile21, avyFile2021, sumSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay7.shp day of sum sampled")

                    windSampled_2021 = Sampled2021DayX + "\\WindVar\\" + f"Day7_WindVar_{avyFile2021}"
                    Sample(windHRRRFile21_Z, avyFile2021, windSampled_2021, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2021}_MeanSampledDay7.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2021, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2021, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2021[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2021, "FID", avyFile2021, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2021 Day 0
            mean_merged = Sampled2021DayX + "\\2021_Day7MeanVar_merged.shp"
            mean_path = Sampled2021DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2021DayX, "2021_Day7MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2021DayX + "\\2021_Day7MinVar_merged.shp"
            min_path = Sampled2021DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2021DayX, "2021_Day7MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2021DayX + "\\2021_Day7MaxVar_merged.shp"
            max_path = Sampled2021DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2021DayX, "2021_Day7MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2021DayX + "\\2021_Day7SumVar_merged.shp"
            sum_path = Sampled2021DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2021DayX, "2021_Day7SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2021DayX + "\\2021_Day7WindVar_merged.shp"
            wind_path = Sampled2021DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2021DayX, "2021_Day7WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2021DayX + "\\2021_Day7MeanVar_merged.shp"
            min_merged = Sampled2021DayX + "\\2021_Day7MinVar_merged.shp"
            max_merged = Sampled2021DayX + "\\2021_Day7MaxVar_merged.shp"
            sum_merged = Sampled2021DayX + "\\2021_Day7SumVar_merged.shp"
            wind_merged = Sampled2021DayX + "\\2021_Day7WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2021 = sampledGDB + "\\T2021_Day7MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2021)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2021, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2021 = sampledGDB + "\\T2021_Day7MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2021)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2021, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2021 = sampledGDB + "\\T2021_Day7MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2021)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2021, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2021 = sampledGDB + "\\T2021_Day7SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2021)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2021, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2021 = sampledGDB + "\\T2021_Day7WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2021)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2021, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2021 Day 7 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 7 done. 2021 is done. Moving on to 2021")
except Exception as ex:
    print(ex)

print("sampling 2022 data ...")
# 2022 days 0-7 sample
try:
    meanHRRRFile22 = HRRRData + "\\2022\\2022meanHRRRVariables.crf"
    minHRRRFile22 = HRRRData + "\\2022\\2022minHRRRVariables.crf"
    maxHRRRFile22 = HRRRData + "\\2022\\2022maxHRRRVariables.crf"
    sumHRRRFile22 = HRRRData + "\\2022\\2022sumHRRRVariables.crf"
    windHRRRFile22_Z = HRRRData + "\\2022\\2022windHRRRVariables_z10.crf"
    # day 0
    try:
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day0"
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        for avyFile2022 in avyFiles2022:
            with arcpy.da.SearchCursor(avyFile2022, ["StdStart", "StdDay0"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day0_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay0.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day0_MinVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MinSampledDay0.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day0_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MaxSampledDay0.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day0_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_SumSampledDay0.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day0_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay0.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day0MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day0MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day0MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day0MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day0MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day0MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day0SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day0SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day0WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day0WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day0MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day0MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day0MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day0SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day0WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day0MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day0MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day0MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day0SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day0WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
            print("fields renamed for 2022 shapefiles")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 0 done. Moving on to Day 1 ...")
    # day 1
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day1"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdStart", "StdDay_1"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day1_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay1.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day1_MinVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay1.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day1_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay1.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day1_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay1.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day1_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay1.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day1MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day1MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day1MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day1MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day1MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day1MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day1SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day1SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day1WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day1WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day1MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day1MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day1MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day1SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day1WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day1MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day1MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day1MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day1SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day1WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
            print("2022 Day 1 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 1 done. Moving on to Day 2 ... ")
    # day 2
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day2"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_1", "StdDay_2"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day2_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay2.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day2_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay2.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day2_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay2.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day2_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay2.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day2_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay2.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day2MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day2MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day2MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day2MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day2MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day2MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day2SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day2SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day2WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day2WindVar_merged.shp"))
            print("- wind variables merged")
        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day2MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day2MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day2MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day2SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day2WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day2MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day2MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day2MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day2SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day2WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
            print("2022 Day 2 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 2 done. Moving on to Day 3 ... ")
    # day 3
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day3"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_2", "StdDay_3"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day3_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay3.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day3_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay3.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day3_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay3.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day3_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay3.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day3_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay3.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day3MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day3MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day3MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day3MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day3MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day3MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day3SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day3SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day3WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day3WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day3MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day3MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day3MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day3SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day3WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day3MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean", field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day3MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min", field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day3MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max", field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day3SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum", field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day3WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind", field.name + "_wind")
            print("2022 Day 3 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 3 done. Moving on to Day 4 ... ")
    # day 4
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day4"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_3", "StdDay_4"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day4_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay4.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day4_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay4.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day4_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay4.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day4_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay4.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day4_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay4.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day4MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day4MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day4MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day4MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day4MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day4MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day4SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day4SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day4WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day4WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day4MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day4MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day4MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day4SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day4WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day4MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day4MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day4MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day4SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day4WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("field names renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 4 done. Moving on to Day 5 ... ")
    # day 5
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day5"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_4", "StdDay_5"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day5_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay5.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day5_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay5.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day5_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay5.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day5_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay5.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day5_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay5.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day5MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day5MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day5MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day5MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day5MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day5MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day5SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day5SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day5WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day5WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day5MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day5MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day5MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day5SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day5WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day5MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day5MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day5MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day5SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day5WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 5 done. Moving on to Day 6 ... ")
    # day 6
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day6"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_5", "StdDay_6"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day6_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay6.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day6_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay6.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day6_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay6.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day6_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay6.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day6_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay6.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day6MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day6MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day6MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day6MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day6MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day6MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day6SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day6SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day6WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day6WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day6MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day6MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day6MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day6SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day6WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day6MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day6MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day6MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day6SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day6WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2022 Day 6 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 6 done. Moving on to Day 7 ... ")
    # day 7
    try:
        arcpy.env.workspace = AvyDataWorkspace + "\\2022"
        avyFiles2022 = arcpy.ListFeatureClasses()
        Sampled2022 = AvyDataWorkspace + "\\2022"
        Sampled2022DayX = Sampled2022 + "\\Day7"
        merged = Sampled2022
        for avyFile2022 in avyFiles2022:
            # sample files for the day 0
            with arcpy.da.SearchCursor(avyFile2022, ["StdDay_6", "StdDay_7"]) as cursor:
                for row in cursor:
                    meanSampled_2022 = Sampled2022DayX + "\\MeanVar\\" + f"Day7_MeanVar_{avyFile2022}"
                    Sample(meanHRRRFile22, avyFile2022, meanSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay7.shp day of mean sampled")

                    minSampled_2022 = Sampled2022DayX + "\\MinVar\\" + f"Day7_MinVar_{avyFile2022}"
                    Sample(minHRRRFile22, avyFile2022, minSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay7.shp day of min sampled")

                    maxSampled_2022 = Sampled2022DayX + "\\MaxVar\\" + f"Day7_MaxVar_{avyFile2022}"
                    Sample(maxHRRRFile22, avyFile2022, maxSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay7.shp day of max sampled")

                    sumSampled_2022 = Sampled2022DayX + "\\SumVar\\" + f"Day7_SumVar_{avyFile2022}"
                    Sample(sumHRRRFile22, avyFile2022, sumSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay7.shp day of sum sampled")

                    windSampled_2022 = Sampled2022DayX + "\\WindVar\\" + f"Day7_WindVar_{avyFile2022}"
                    Sample(windHRRRFile22_Z, avyFile2022, windSampled_2022, "NEAREST", "FID", "ALL_SLICES",
                           f'StdTime {row[0]} {row[1]}', "MEAN", "", "", "ROW_WISE", "FEATURE_CLASS")
                    print(f"{avyFile2022}_MeanSampledDay7.shp day of wind sampled")

            # add fields to sampled files to ID them
            arcpy.AddField_management(meanSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(meanSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            # join field
            arcpy.JoinField_management(meanSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(minSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(minSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(minSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(maxSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(maxSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(maxSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(sumSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "", "REQUIRED")
            with arcpy.da.UpdateCursor(sumSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(sumSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")

            arcpy.AddField_management(windSampled_2022, "ID_Num", "TEXT", "", "", "20", "ID_Num", "",
                                      "REQUIRED")
            with arcpy.da.UpdateCursor(windSampled_2022, "ID_Num") as cursor:
                for row in cursor:
                    row[0] = f"{avyFile2022[:-4]}"
                    cursor.updateRow(row)

            arcpy.JoinField_management(windSampled_2022, "FID", avyFile2022, "FID", "Unique_Num")
            print("field joined")
            print("ID Num fields added")

        try:
            # merge all mean files for 2022 Day 0
            mean_merged = Sampled2022DayX + "\\2022_Day7MeanVar_merged.shp"
            mean_path = Sampled2022DayX + "\\MeanVar"
            arcpy.env.workspace = mean_path
            meanShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(meanShpList, os.path.join(Sampled2022DayX, "2022_Day7MeanVar_merged.shp"))
            print("- mean variables merged")

            # merge all min files
            min_merged = Sampled2022DayX + "\\2022_Day7MinVar_merged.shp"
            min_path = Sampled2022DayX + "\\MinVar"
            arcpy.env.workspace = min_path
            minShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(minShpList, os.path.join(Sampled2022DayX, "2022_Day7MinVar_merged.shp"))
            print("- min variables merged")

            # merge all max files
            max_merged = Sampled2022DayX + "\\2022_Day7MaxVar_merged.shp"
            max_path = Sampled2022DayX + "\\MaxVar"
            arcpy.env.workspace = max_path
            maxShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(maxShpList, os.path.join(Sampled2022DayX, "2022_Day7MaxVar_merged.shp"))
            print("- max variables merged")

            # merge all sum files
            sum_merged = Sampled2022DayX + "\\2022_Day7SumVar_merged.shp"
            sum_path = Sampled2022DayX + "\\SumVar"
            arcpy.env.workspace = sum_path
            sumShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(sumShpList, os.path.join(Sampled2022DayX, "2022_Day7SumVar_merged.shp"))
            print("- sum variables merged")

            # merge all wind files
            wind_merged = Sampled2022DayX + "\\2022_Day7WindVar_merged.shp"
            wind_path = Sampled2022DayX + "\\WindVar"
            arcpy.env.workspace = wind_path
            windShpList = arcpy.ListFeatureClasses("*.shp")
            arcpy.Merge_management(windShpList, os.path.join(Sampled2022DayX, "2022_Day7WindVar_merged.shp"))
            print("- wind variables merged")

        except Exception as ex:
            print(ex)
        # convert files to a geodatabase and rename files
        try:
            mean_merged = Sampled2022DayX + "\\2022_Day7MeanVar_merged.shp"
            min_merged = Sampled2022DayX + "\\2022_Day7MinVar_merged.shp"
            max_merged = Sampled2022DayX + "\\2022_Day7MaxVar_merged.shp"
            sum_merged = Sampled2022DayX + "\\2022_Day7SumVar_merged.shp"
            wind_merged = Sampled2022DayX + "\\2022_Day7WindVar_merged.shp"

            # convert to geodatabase files
            arcpy.FeatureClassToGeodatabase_conversion([mean_merged, min_merged, max_merged, sum_merged, wind_merged],
                                                       sampledGDB)

            gdb_mean_merged2022 = sampledGDB + "\\T2022_Day7MeanVar_merged"
            mean_fields = arcpy.ListFields(gdb_mean_merged2022)
            for field in mean_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_mean_merged2022, field.name, field.name + "_mean",
                                                field.name + "_mean")

            gdb_min_merged2022 = sampledGDB + "\\T2022_Day7MinVar_merged"
            min_fields = arcpy.ListFields(gdb_min_merged2022)
            for field in min_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_min_merged2022, field.name, field.name + "_min",
                                                field.name + "_min")

            gdb_max_merged2022 = sampledGDB + "\\T2022_Day7MaxVar_merged"
            max_fields = arcpy.ListFields(gdb_max_merged2022)
            for field in max_fields:
                if field.name == "gust_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "sfcr_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "snod_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "tmp_sfc":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")
                if field.name == "wind_htgl":
                    arcpy.AlterField_management(gdb_max_merged2022, field.name, field.name + "_max",
                                                field.name + "_max")

            gdb_sum_merged2022 = sampledGDB + "\\T2022_Day7SumVar_merged"
            sum_fields = arcpy.ListFields(gdb_sum_merged2022)
            for field in sum_fields:
                if field.name == "asnow_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")
                if field.name == "snowc_sfc":
                    arcpy.AlterField_management(gdb_sum_merged2022, field.name, field.name + "_sum",
                                                field.name + "_sum")

            gdb_wind_merged2022 = sampledGDB + "\\T2022_Day7WindVar_merged"
            wind_fields = arcpy.ListFields(gdb_wind_merged2022)
            for field in wind_fields:
                if field.name == "ugrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
                if field.name == "vgrd_htgl":
                    arcpy.AlterField_management(gdb_wind_merged2022, field.name, field.name + "_wind",
                                                field.name + "_wind")
            print("2022 Day 7 fields renamed")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    print("Day 7 done. 2022 is done.")
except Exception as ex:
    print(ex)

print("aggregating data and gathering statistics ...")
# get summary statistics:
try:
    # 2018
    try:
        # append max, min, sum, and wind files to mean files for 2018 Day 0
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day0MeanVar_merged", AnalysisData + "\\2018_Day0.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day0MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                                  "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day0MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day0SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day0WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("wind  field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day0.shp", "Unique_Num", avalancheData, "Unique_Num", ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)

        # append max, min, sum, and wind files to mean files for 2018 Day 1
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day1MeanVar_merged", AnalysisData + "\\2018_Day1.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day1MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day1MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day1SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day1WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day1.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 2
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day2MeanVar_merged", AnalysisData + "\\2018_Day2.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day2MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day2MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day2SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day2WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day2.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 3
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day3MeanVar_merged", AnalysisData + "\\2018_Day3.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day3MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day3MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day3SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day3WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day3.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 4
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day4MeanVar_merged", AnalysisData + "\\2018_Day4.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day4MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day4MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day4SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day4WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day4.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 5
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day5MeanVar_merged", AnalysisData + "\\2018_Day5.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day5MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day5MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day5SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day5WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day5.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 6
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day6MeanVar_merged", AnalysisData + "\\2018_Day6.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day6MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day6MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day6SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day6WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day6.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2018 Day 7
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2018_Day7MeanVar_merged", AnalysisData + "\\2018_Day7.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day7MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day7MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day7SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2018_Day7WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2018_Day7.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # 2019
    try:
        # append max, min, sum, and wind files to mean files for 2019 Day 0
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day0MeanVar_merged", AnalysisData + "\\2019_Day0.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day0.shp", "ID_Num", sampledGDB + "\\T2019_Day0MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                                  "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day0.shp", "ID_Num", sampledGDB + "\\T2019_Day0MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                                  "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day0.shp", "ID_Num", sampledGDB + "\\T2019_Day0SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day0.shp", "ID_Num", sampledGDB + "\\T2019_Day0WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day0.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)

        # append max, min, sum, and wind files to mean files for 2019 Day 1
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day1MeanVar_merged", AnalysisData + "\\2019_Day1.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day1.shp", "ID_Num", sampledGDB + "\\T2019_Day1MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day1.shp", "ID_Num", sampledGDB + "\\T2019_Day1MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day1.shp", "ID_Num", sampledGDB + "\\T2019_Day1SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day1WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day1.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 2
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day2MeanVar_merged", AnalysisData + "\\2019_Day2.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day2.shp", "ID_Num", sampledGDB + "\\T2019_Day2MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day2.shp", "ID_Num", sampledGDB + "\\T2019_Day2MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day2.shp", "ID_Num", sampledGDB + "\\T2019_Day2SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day2WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day2.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 3
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day3MeanVar_merged", AnalysisData + "\\2019_Day3.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day3.shp", "ID_Num", sampledGDB + "\\T2019_Day3MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day3.shp", "ID_Num", sampledGDB + "\\T2019_Day3MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day3.shp", "ID_Num", sampledGDB + "\\T2019_Day3SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day3WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day3.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 4
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day4MeanVar_merged", AnalysisData + "\\2019_Day4.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day4.shp", "ID_Num", sampledGDB + "\\T2019_Day4MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day4.shp", "ID_Num", sampledGDB + "\\T2019_Day4MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day4.shp", "ID_Num", sampledGDB + "\\T2019_Day4SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day4WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day4.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 5
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day5MeanVar_merged", AnalysisData + "\\2019_Day5.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day5.shp", "ID_Num", sampledGDB + "\\T2019_Day5MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day5.shp", "ID_Num", sampledGDB + "\\T2019_Day5MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day5.shp", "ID_Num", sampledGDB + "\\T2019_Day5SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day5WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day5.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 6
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day6MeanVar_merged", AnalysisData + "\\2019_Day6.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day6.shp", "ID_Num", sampledGDB + "\\T2019_Day6MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day6.shp", "ID_Num", sampledGDB + "\\T2019_Day6MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day6.shp", "ID_Num", sampledGDB + "\\T2019_Day6SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day6WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day6.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2019 Day 7
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2019_Day7MeanVar_merged", AnalysisData + "\\2019_Day7.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day7.shp", "ID_Num", sampledGDB + "\\T2019_Day7MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day7.shp", "ID_Num", sampledGDB + "\\T2019_Day7MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day7.shp", "ID_Num", sampledGDB + "\\T2019_Day7SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2019_Day7WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2019_Day7.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # 2020
    try:
        # append max, min, sum, and wind files to mean files for 2020 Day 0
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day0MeanVar_merged", AnalysisData + "\\2020_Day0.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day0MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day0MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day0SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day0WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day0.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)

        # append max, min, sum, and wind files to mean files for 2020 Day 1
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day1MeanVar_merged", AnalysisData + "\\2020_Day1.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day1MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day1MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day1SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day1WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day1.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 2
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day2MeanVar_merged", AnalysisData + "\\2020_Day2.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day2MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day2MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day2SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day2WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day2.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 3
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day3MeanVar_merged", AnalysisData + "\\2020_Day3.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day3MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day3MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day3SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day3WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day3.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 4
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day4MeanVar_merged", AnalysisData + "\\2020_Day4.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day4MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day4MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day4SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day4WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day4.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 5
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day5MeanVar_merged", AnalysisData + "\\2020_Day5.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day5MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day5MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day5SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day5WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day5.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 6
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day6MeanVar_merged", AnalysisData + "\\2020_Day6.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day6MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day6MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day6SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day6WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day6.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2020 Day 7
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2020_Day7MeanVar_merged", AnalysisData + "\\2020_Day7.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day7MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day7MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day7SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2020_Day7WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2020_Day7.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # 2021
    try:
        # append max, min, sum, and wind files to mean files for 2021 Day 0
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day0MeanVar_merged", AnalysisData + "\\2021_Day0.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day0MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day0MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day0SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day0WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day0.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)

        # append max, min, sum, and wind files to mean files for 2021 Day 1
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day1MeanVar_merged", AnalysisData + "\\2021_Day1.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day1MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day1MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day1SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day1WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day1.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 2
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day2MeanVar_merged", AnalysisData + "\\2021_Day2.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day2MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day2MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day2SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day2WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day2.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 3
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day3MeanVar_merged", AnalysisData + "\\2021_Day3.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day3MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day3MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day3SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day3WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day3.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 4
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day4MeanVar_merged", AnalysisData + "\\2021_Day4.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day4MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day4MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day4SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day4WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day4.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 5
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day5MeanVar_merged", AnalysisData + "\\2021_Day5.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day5MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day5MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day5SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day5WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day5.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 6
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day6MeanVar_merged", AnalysisData + "\\2021_Day6.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day6MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day6MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day6SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day6WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day6.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2021 Day 7
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2021_Day7MeanVar_merged", AnalysisData + "\\2021_Day7.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day7MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day7MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day7SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2021_Day7WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2021_Day7.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # 2022
    try:
        # append max, min, sum, and wind files to mean files for 2022 Day 0
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day0MeanVar_merged", AnalysisData + "\\2022_Day0.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day0MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day0MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day0SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day0.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day0WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day0.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)

        # append max, min, sum, and wind files to mean files for 2022 Day 1
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day1MeanVar_merged", AnalysisData + "\\2022_Day1.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day1MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day1MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day1SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day1.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day1WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day1.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 2
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day2MeanVar_merged", AnalysisData + "\\2022_Day2.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day2MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day2MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day2SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day2.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day2WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day2.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 3
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day3MeanVar_merged", AnalysisData + "\\2022_Day3.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day3MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day3MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day3SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day3.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day3WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day3.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 4
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day4MeanVar_merged", AnalysisData + "\\2022_Day4.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day4MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day4MinVar_merged",
                                       "ID_Num", ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min",
                                                  "tmp_sfc_min", "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day4SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day4.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day4WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day4.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 5
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day5MeanVar_merged", AnalysisData + "\\2022_Day5.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day5MaxVar_merged",
                                       "ID_Num", ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max",
                                                  "tmp_sfc_max", "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day5MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day5SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day5.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day5WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day5.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 6
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day6MeanVar_merged", AnalysisData + "\\2022_Day6.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day6MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day6MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day6SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day6.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day6WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day6.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
        # append max, min, sum, and wind files to mean files for 2022 Day 7
        try:
            arcpy.CopyFeatures_management(sampledGDB + "\\T2022_Day7MeanVar_merged", AnalysisData + "\\2022_Day7.shp")
            print("features copied to join")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day7MaxVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_max", "sfcr_sfc_max", "snod_sfc_max", "tmp_htgl_max", "tmp_sfc_max",
                                        "wind_htgl_max"])
            print("max field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day7MinVar_merged",
                                       "ID_Num",
                                       ["gust_sfc_min", "sfcr_sfc_min", "snod_sfc_min", "tmp_htgl_min", "tmp_sfc_min",
                                        "wind_htgl_min"])
            print("min field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day7SumVar_merged",
                                       "ID_Num", ["asnow_sfc_sum", "snowc_sfc_sum"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day7.shp", "ID_Num",
                                       sampledGDB + "\\T2022_Day7WindVar_merged",
                                       "ID_Num", ["ugrd_htgl_wind", "vgrd_htgl_wind"])
            print("sum field joined")

            arcpy.JoinField_management(AnalysisData + "\\2022_Day7.shp", "Unique_Num", avalancheData, "Unique_Num",
                                       ["_elevation", "_aspect"])
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)

    # merge all the day files together
    try:
        # merge all day 0
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day0.shp", AnalysisData + "\\2019_Day0.shp", AnalysisData + "\\2020_Day0.shp", AnalysisData + "\\2021_Day0.shp",
             AnalysisData + "\\2022_Day0.shp"], AnalysisData + "\\ConsolidatedDays\\Day0_Data.shp")
        print("day 0 data merged")
        # merge all of Day 1 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day1.shp", AnalysisData + "\\2019_Day1.shp", AnalysisData + "\\2020_Day1.shp",
             AnalysisData + "\\2021_Day1.shp", AnalysisData + "\\2022_Day1.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day1_Data.shp")
        print("day 1 data merged")
        # merge all of Day 2 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day2.shp", AnalysisData + "\\2019_Day2.shp", AnalysisData + "\\2020_Day2.shp",
             AnalysisData + "\\2021_Day2.shp", AnalysisData + "\\2022_Day2.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day2_Data.shp")
        print("day 2 data merged")
        # merge all of Day 3 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day3.shp", AnalysisData + "\\2019_Day3.shp", AnalysisData + "\\2020_Day3.shp",
             AnalysisData + "\\2021_Day3.shp", AnalysisData + "\\2022_Day3.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day3_Data.shp")
        print("day 3 data merged")
        # merge all of Day 4 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day4.shp", AnalysisData + "\\2019_Day4.shp", AnalysisData + "\\2020_Day4.shp",
             AnalysisData + "\\2021_Day4.shp", AnalysisData + "\\2022_Day4.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day4_Data.shp")
        print("day 4 data merged")
        # merge all of Day 5 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day5.shp", AnalysisData + "\\2019_Day5.shp", AnalysisData + "\\2020_Day5.shp",
             AnalysisData + "\\2021_Day5.shp", AnalysisData + "\\2022_Day5.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day5_Data.shp")
        print("day 5 data merged")
        # merge all of Day 6 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day6.shp", AnalysisData + "\\2019_Day6.shp", AnalysisData + "\\2020_Day6.shp",
             AnalysisData + "\\2021_Day6.shp",
             AnalysisData + "\\2022_Day6.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day6_Data.shp")
        print("day 6 data merged")
        # merge all of Day 7 files
        arcpy.Merge_management(
            [AnalysisData + "\\2018_Day7.shp", AnalysisData + "\\2019_Day7.shp", AnalysisData + "\\2020_Day7.shp",
             AnalysisData + "\\2021_Day7.shp", AnalysisData + "\\2022_Day7.shp"],
            AnalysisData + "\\ConsolidatedDays\\Day7_Data.shp")
        print("day 7 data merged")
    except Exception as ex:
        print(ex)
    # get summary statistics
    try:
        day0_file = AnalysisData + "\\ConsolidatedDays\\Day0_Data.shp"
        day1_file = AnalysisData + "\\ConsolidatedDays\\Day1_Data.shp"
        day2_file = AnalysisData + "\\ConsolidatedDays\\Day2_Data.shp"
        day3_file = AnalysisData + "\\ConsolidatedDays\\Day3_Data.shp"
        day4_file = AnalysisData + "\\ConsolidatedDays\\Day4_Data.shp"
        day5_file = AnalysisData + "\\ConsolidatedDays\\Day5_Data.shp"
        day6_file = AnalysisData + "\\ConsolidatedDays\\Day6_Data.shp"
        day7_file = AnalysisData + "\\ConsolidatedDays\\Day7_Data.shp"

        # convert files to gdb files
        arcpy.FeatureClassToGeodatabase_conversion([day0_file, day1_file, day2_file, day3_file, day4_file, day5_file,
                                                    day6_file, day7_file], analysisGDB)
        print("files converted")

        day0 = analysisGDB + "\\Day0_Data"
        day1 = analysisGDB + "\\Day1_Data"
        day2 = analysisGDB + "\\Day2_Data"
        day3 = analysisGDB + "\\Day3_Data"
        day4 = analysisGDB + "\\Day4_Data"
        day5 = analysisGDB + "\\Day5_Data"
        day6 = analysisGDB + "\\Day6_Data"
        day7 = analysisGDB + "\\Day7_Data"
        # edit field names
        try:
            # edit fields for Day 0
            try:
                arcpy.AlterField_management(day0, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day0, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day0, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day0, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day0, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day0, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day0, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day0, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day0, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day0, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day0, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day0, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day0, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day0, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day0, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day0, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day0, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day0, "gust_sfc_2", "gust_min", "gust_min")
                print("day 0 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 1
            try:
                arcpy.AlterField_management(day1, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day1, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day1, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day1, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day1, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day1, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day1, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day1, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day1, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day1, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day1, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day1, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day1, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day1, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day1, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day1, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day1, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day1, "gust_sfc_2", "gust_min", "gust_min")
                print("day 1 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 2
            try:
                arcpy.AlterField_management(day2, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day2, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day2, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day2, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day2, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day2, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day2, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day2, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day2, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day2, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day2, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day2, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day2, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day2, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day2, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day2, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day2, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day2, "gust_sfc_2", "gust_min", "gust_min")
                print("day 2 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 3
            try:
                arcpy.AlterField_management(day3, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day3, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day3, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day3, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day3, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day3, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day3, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day3, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day3, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day3, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day3, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day3, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day3, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day3, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day3, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day3, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day3, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day3, "gust_sfc_2", "gust_min", "gust_min")
                print("day 3 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 4
            try:
                arcpy.AlterField_management(day4, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day4, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day4, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day4, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day4, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day4, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day4, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day4, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day4, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day4, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day4, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day4, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day4, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day4, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day4, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day4, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day4, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day4, "gust_sfc_2", "gust_min", "gust_min")
                print("day 4 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 5
            try:
                arcpy.AlterField_management(day5, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day5, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day5, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day5, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day5, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day5, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day5, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day5, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day5, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day5, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day5, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day5, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day5, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day5, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day5, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day5, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day5, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day5, "gust_sfc_2", "gust_min", "gust_min")
                print("day 5 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 6
            try:
                arcpy.AlterField_management(day6, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day6, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day6, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day6, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day6, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day6, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day6, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day6, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day6, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day6, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day6, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day6, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day6, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day6, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day6, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day6, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day6, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day6, "gust_sfc_2", "gust_min", "gust_min")
                print("day 6 fields renamed")
            except Exception as ex:
                print(ex)
            # edit fields for Day 7
            try:
                arcpy.AlterField_management(day7, "gust_sfc_m", "gust_mean", "gust_mean")
                arcpy.AlterField_management(day7, "sfcr_sfc_m", "sfcr_mean", "sfcr_mean")
                arcpy.AlterField_management(day7, "snod_sfc_m", "snod_mean", "snod_mean")
                arcpy.AlterField_management(day7, "tmp_htgl_m", "tmp_h_mean", "tmp_h_mean")
                arcpy.AlterField_management(day7, "tmp_sfc_me", "tmp_s_mean", "tmp_s_mean")
                arcpy.AlterField_management(day7, "wind_htgl_", "wind_mean", "wind_mean")
                arcpy.AlterField_management(day7, "gust_sfc_1", "gust_max", "gust_max")
                arcpy.AlterField_management(day7, "sfcr_sfc_1", "sfcr_max", "sfcr_max")
                arcpy.AlterField_management(day7, "snod_sfc_1", "snod_max", "snod_max")
                arcpy.AlterField_management(day7, "tmp_htgl_1", "tmp_h_max", "tmp_h_max")
                arcpy.AlterField_management(day7, "tmp_sfc_ma", "tmp_s_max", "tmp_s_max")
                arcpy.AlterField_management(day7, "wind_htgl1", "wind_max", "wind_max")
                arcpy.AlterField_management(day7, "sfcr_sfc_2", "sfcr_min", "sfcr_min")
                arcpy.AlterField_management(day7, "snod_sfc_2", "snod_min", "snod_min")
                arcpy.AlterField_management(day7, "tmp_htgl_2", "tmp_h_min", "tmp_h_min")
                arcpy.AlterField_management(day7, "tmp_sfc_mi", "tmp_s_min", "tmp_s_min")
                arcpy.AlterField_management(day7, "wind_htg_1", "wind_min", "wind_min")
                arcpy.AlterField_management(day7, "gust_sfc_2", "gust_min", "gust_min")
                print("day 7 fields renamed")
            except Exception as ex:
                print(ex)

        except Exception as ex:
            print(ex)
        # calculate summary statistics
        try:
            # day 0 stats
            try:
                arcpy.Statistics_analysis(day0, analysisGDB + "\\day0_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day0_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day0_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day0"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day0, analysisGDB + "\\day0_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day0_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day0_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day0"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day0, analysisGDB + "\\day0_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day0_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day0_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day0"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 1 stats
            try:
                arcpy.Statistics_analysis(day1, analysisGDB + "\\day1_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day1_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day1_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day1"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day1, analysisGDB + "\\day1_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day1_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day1_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day1"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day1, analysisGDB + "\\day1_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day1_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day1_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day1"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 2 stats
            try:
                arcpy.Statistics_analysis(day2, analysisGDB + "\\day2_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day2_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day2_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day2"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day2, analysisGDB + "\\day2_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day2_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day2_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day2"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day2, analysisGDB + "\\day2_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day2_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day2_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day2"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 3 stats
            try:
                arcpy.Statistics_analysis(day3, analysisGDB + "\\day3_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day3_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day3_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day3"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day3, analysisGDB + "\\day3_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day3_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day3_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day3"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day3, analysisGDB + "\\day3_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day3_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day3_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day3"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 4 stats
            try:
                arcpy.Statistics_analysis(day4, analysisGDB + "\\day4_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day4_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day4_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day4"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day4, analysisGDB + "\\day4_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day4_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day4_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day4"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day4, analysisGDB + "\\day4_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day4_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day4_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day4"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 5 stats
            try:
                arcpy.Statistics_analysis(day5, analysisGDB + "\\day5_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day5_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day5_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day5"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day5, analysisGDB + "\\day5_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day5_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day5_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day5"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day5, analysisGDB + "\\day5_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day5_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day5_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day5"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 6 stats
            try:
                arcpy.Statistics_analysis(day6, analysisGDB + "\\day6_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day6_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day6_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day6"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day6, analysisGDB + "\\day6_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day6_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day6_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day6"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day6, analysisGDB + "\\day6_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day6_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day6_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day6"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
            # day 7 stats
            try:
                arcpy.Statistics_analysis(day7, analysisGDB + "\\day7_mean_stats",
                                          [["gust_mean", "MEAN"], ["sfcr_mean", "MEAN"], ["snod_mean", "MEAN"],
                                           ["tmp_h_mean", "MEAN"],
                                           ["tmp_s_mean", "MEAN"], ["wind_mean", "MEAN"], ["gust_max", "MEAN"],
                                           ["sfcr_max", "MEAN"], ["snod_max", "MEAN"],
                                           ["tmp_h_max", "MEAN"], ["tmp_s_max", "MEAN"], ["wind_max", "MEAN"],
                                           ["sfcr_min", "MEAN"],
                                           ["snod_min", "MEAN"], ["tmp_h_min", "MEAN"], ["tmp_s_min", "MEAN"],
                                           ["wind_min", "MEAN"],
                                           ["gust_min", "MEAN"], ["asnow_sfc_", "MEAN"], ["ugrd_htgl_", "MEAN"],
                                           ["vgrd_htgl_", "MEAN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day7_mean_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day7_mean_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day7"
                        cursor.updateRow(row)
                # min
                arcpy.Statistics_analysis(day7, analysisGDB + "\\day7_min_stats",
                                          [["gust_max", "MIN"], ["sfcr_max", "MIN"],
                                           ["snod_max", "MIN"], ["tmp_h_max", "MIN"], ["wind_mean", "MIN"],
                                           ["tmp_s_max", "MIN"], ["wind_max", "MIN"],
                                           ["sfcr_min", "MIN"], ["snod_min", "MIN"],
                                           ["tmp_h_min", "MIN"], ["tmp_s_min", "MIN"],
                                           ["wind_min", "MIN"], ["gust_min", "MIN"],
                                           ["asnow_sfc_", "MIN"], ["ugrd_htgl_", "MIN"],
                                           ["vgrd_htgl_", "MIN"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day7_min_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day7_min_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day7"
                        cursor.updateRow(row)
                # max
                arcpy.Statistics_analysis(day7, analysisGDB + "\\day7_max_stats",
                                          [["gust_max", "MAX"], ["sfcr_max", "MAX"],
                                           ["snod_max", "MAX"], ["tmp_h_max", "MAX"], ["wind_mean", "MAX"],
                                           ["tmp_s_max", "MAX"], ["wind_max", "MAX"],
                                           ["sfcr_min", "MAX"], ["snod_min", "MAX"],
                                           ["tmp_h_min", "MAX"], ["tmp_s_min", "MAX"],
                                           ["wind_min", "MAX"], ["gust_min", "MAX"],
                                           ["asnow_sfc_", "MAX"], ["ugrd_htgl_", "MAX"],
                                           ["vgrd_htgl_", "MAX"]])
                print("stats calculated")
                arcpy.AddField_management(analysisGDB + "\\day7_max_stats", "Day", "TEXT", "", "", "10", "Day")
                print("field added")
                with arcpy.da.UpdateCursor(analysisGDB + "\\day7_max_stats", "Day") as cursor:
                    for row in cursor:
                        row[0] = "Day7"
                        cursor.updateRow(row)
            except Exception as ex:
                print(ex)
        except Exception as ex:
            print(ex)
        # combine files
        try:
            # merge max files
            arcpy.Merge_management(
                [analysisGDB + "\\day0_max_stats", analysisGDB + "\\day1_max_stats", analysisGDB + "\\day2_max_stats",
                 analysisGDB + "\\day3_max_stats", analysisGDB + "\\day4_max_stats", analysisGDB + "\\day5_max_stats",
                 analysisGDB + "\\day6_max_stats", analysisGDB + "\\day7_max_stats"], analysisGDB + "\\Max_Stats")
            print("max stats merged")

            # merge mean stats
            arcpy.Merge_management([analysisGDB + "\\day0_mean_stats", analysisGDB + "\\day1_mean_stats",
                                    analysisGDB + "\\day2_mean_stats",
                                    analysisGDB + "\\day3_mean_stats", analysisGDB + "\\day4_mean_stats",
                                    analysisGDB + "\\day5_mean_stats",
                                    analysisGDB + "\\day6_mean_stats", analysisGDB + "\\day7_mean_stats"],
                                   analysisGDB + "\\Mean_Stats")
            print("mean stats merged")

            # merge min stats
            arcpy.Merge_management(
                [analysisGDB + "\\day0_min_stats", analysisGDB + "\\day1_min_stats", analysisGDB + "\\day2_min_stats",
                 analysisGDB + "\\day3_min_stats", analysisGDB + "\\day4_min_stats", analysisGDB + "\\day5_min_stats",
                 analysisGDB + "\\day6_min_stats", analysisGDB + "\\day7_min_stats"], analysisGDB + "\\Min_Stats")
            print("min stats merged")

        except Exception as ex:
            print(ex)
        # delete intermediary files
        try:
            arcpy.Delete_management(
                [analysisGDB + "\\day0_max_stats", analysisGDB + "\\day1_max_stats", analysisGDB + "\\day2_max_stats",
                 analysisGDB + "\\day3_max_stats", analysisGDB + "\\day4_max_stats", analysisGDB + "\\day5_max_stats",
                 analysisGDB + "\\day6_max_stats", analysisGDB + "\\day7_max_stats", analysisGDB + "\\day0_mean_stats",
                 analysisGDB + "\\day1_mean_stats", analysisGDB + "\\day2_mean_stats",
                 analysisGDB + "\\day3_mean_stats",
                 analysisGDB + "\\day4_mean_stats", analysisGDB + "\\day5_mean_stats",
                 analysisGDB + "\\day6_mean_stats",
                 analysisGDB + "\\day7_mean_stats", analysisGDB + "\\day0_min_stats", analysisGDB + "\\day1_min_stats",
                 analysisGDB + "\\day2_min_stats", analysisGDB + "\\day3_min_stats", analysisGDB + "\\day4_min_stats",
                 analysisGDB + "\\day5_min_stats", analysisGDB + "\\day6_min_stats", analysisGDB + "\\day7_min_stats"])
            print("delete intermediary files ")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
except Exception as ex:
    print(ex)

print("standardizing data ... ")
# standardize data:
try:
    try:
        arcpy.StandardizeField_management(analysisGDB + "\\Day0_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day1_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day2_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day3_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day4_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day5_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day6_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        arcpy.StandardizeField_management(analysisGDB + "\\Day7_Data", [["gust_max"], ["wind_mean"], ["asnow_sfc_"]],
                                          "Z-SCORE")
        print("data standardized")
    except Exception as ex:
        print(ex)
    # select data greater than
    try:
        cleanDays0 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day0_Data", "NEW_SELECTION",
                                                                                          '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays0, "SUBSET_SELECTION",
                                                            '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays0, "SUBSET_SELECTION",
                                                            '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays0, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays0, "SUBSET_SELECTION",
                                                            '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays0, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays0, analysisGDB + "\\Day0_Std")
        print("selected std Day 0 features")

        cleanDays1 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day1_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays1, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays1, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays1, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays1, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays1, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays1, analysisGDB + "\\Day1_Std")
        print("selected std Day 1 features")

        cleanDays2 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day2_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays2, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays2, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays2, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays2, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays2, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays2, analysisGDB + "\\Day2_Std")
        print("selected std Day 2 features")

        cleanDays3 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day3_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays3, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays3, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays3, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays3, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays3, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays3, analysisGDB + "\\Day3_Std")
        print("selected std Day 3 features")

        cleanDays4 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day4_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays4, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays4, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays4, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays4, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays4, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays4, analysisGDB + "\\Day4_Std")
        print("selected std Day 4 features")

        cleanDays5 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day5_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays5, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays5, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays5, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays5, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays5, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays5, analysisGDB + "\\Day5_Std")
        print("selected std Day 5 features")

        cleanDays6 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day6_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays6, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays6, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays6, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays6, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays6, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays6, analysisGDB + "\\Day6_Std")
        print("selected std Day 6 features")

        cleanDays7 = arcpy.SelectLayerByAttribute_management(analysisGDB + "\\Day7_Data", "NEW_SELECTION",
                                                             '"gust_max_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays7, "SUBSET_SELECTION",
                                                '"gust_max_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays7, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays7, "SUBSET_SELECTION",
                                                '"wind_mean_Z_SCORE" <= 2')
        arcpy.SelectLayerByAttribute_management(cleanDays7, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" >= -2')
        arcpy.SelectLayerByAttribute_management(cleanDays7, "SUBSET_SELECTION",
                                                '"asnow_sfc__Z_SCORE" <= 2')
        arcpy.CopyFeatures_management(cleanDays7, analysisGDB + "\\Day7_Std")
        print("selected std Day 7 features")
    except Exception as ex:
        print(ex)
    # calculate mean stats on standardized data
    try:
        try:
            # day 0
            arcpy.Statistics_analysis(analysisGDB + "\\Day0_Std", analysisGDB + "\\day0_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day0_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day0_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day0"
                    cursor.updateRow(row)

            # day 1
            arcpy.Statistics_analysis(analysisGDB + "\\Day1_Std", analysisGDB + "\\day1_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day1_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day1_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day1"
                    cursor.updateRow(row)

            # day 2
            arcpy.Statistics_analysis(analysisGDB + "\\Day2_Std", analysisGDB + "\\day2_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day2_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day2_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day2"
                    cursor.updateRow(row)

            # day 3
            arcpy.Statistics_analysis(analysisGDB + "\\Day3_Std", analysisGDB + "\\day3_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day3_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day3_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day3"
                    cursor.updateRow(row)

            # day 4
            arcpy.Statistics_analysis(analysisGDB + "\\Day4_Std", analysisGDB + "\\day4_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day4_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day4_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day4"
                    cursor.updateRow(row)

            # day 5
            arcpy.Statistics_analysis(analysisGDB + "\\Day5_Std", analysisGDB + "\\day5_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day5_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day5_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day5"
                    cursor.updateRow(row)

            # day 6
            arcpy.Statistics_analysis(analysisGDB + "\\Day6_Std", analysisGDB + "\\day6_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day6_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day6_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day6"
                    cursor.updateRow(row)

            # day 7
            arcpy.Statistics_analysis(analysisGDB + "\\Day7_Std", analysisGDB + "\\day7_STDMean_stats",
                                      [["gust_max", "MEAN"], ["wind_mean", "MEAN"], ["asnow_sfc_", "MEAN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day7_STDMean_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day7_STDMean_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day7"
                    cursor.updateRow(row)
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # calculate minimum stats on standardized data
    try:
        try:
            # day 0
            arcpy.Statistics_analysis(analysisGDB + "\\Day0_Std", analysisGDB + "\\day0_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day0_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day0_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day0"
                    cursor.updateRow(row)

            # day 1
            arcpy.Statistics_analysis(analysisGDB + "\\Day1_Std", analysisGDB + "\\day1_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day1_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day1_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day1"
                    cursor.updateRow(row)

            # day 2
            arcpy.Statistics_analysis(analysisGDB + "\\Day2_Std", analysisGDB + "\\day2_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day2_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day2_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day2"
                    cursor.updateRow(row)

            # day 3
            arcpy.Statistics_analysis(analysisGDB + "\\Day3_Std", analysisGDB + "\\day3_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day3_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day3_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day3"
                    cursor.updateRow(row)

            # day 4
            arcpy.Statistics_analysis(analysisGDB + "\\Day4_Std", analysisGDB + "\\day4_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day4_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day4_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day4"
                    cursor.updateRow(row)

            # day 5
            arcpy.Statistics_analysis(analysisGDB + "\\Day5_Std", analysisGDB + "\\day5_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day5_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day5_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day5"
                    cursor.updateRow(row)

            # day 6
            arcpy.Statistics_analysis(analysisGDB + "\\Day6_Std", analysisGDB + "\\day6_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day6_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day6_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day6"
                    cursor.updateRow(row)

            # day 7
            arcpy.Statistics_analysis(analysisGDB + "\\Day7_Std", analysisGDB + "\\day7_STDMin_stats",
                                      [["gust_max", "MIN"], ["wind_mean", "MIN"], ["asnow_sfc_", "MIN"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day7_STDMin_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day7_STDMin_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day7"
                    cursor.updateRow(row)
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # calculate maximum stats on standardized data
    try:
        try:
            # day 0
            arcpy.Statistics_analysis(analysisGDB + "\\Day0_Std", analysisGDB + "\\day0_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day0_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day0_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day0"
                    cursor.updateRow(row)

            # day 1
            arcpy.Statistics_analysis(analysisGDB + "\\Day1_Std", analysisGDB + "\\day1_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day1_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day1_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day1"
                    cursor.updateRow(row)

            # day 2
            arcpy.Statistics_analysis(analysisGDB + "\\Day2_Std", analysisGDB + "\\day2_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day2_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day2_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day2"
                    cursor.updateRow(row)

            # day 3
            arcpy.Statistics_analysis(analysisGDB + "\\Day3_Std", analysisGDB + "\\day3_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day3_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day3_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day3"
                    cursor.updateRow(row)

            # day 4
            arcpy.Statistics_analysis(analysisGDB + "\\Day4_Std", analysisGDB + "\\day4_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day4_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day4_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day4"
                    cursor.updateRow(row)
            # day 5
            arcpy.Statistics_analysis(analysisGDB + "\\Day5_Std", analysisGDB + "\\day5_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day5_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day5_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day5"
                    cursor.updateRow(row)

            # day 6
            arcpy.Statistics_analysis(analysisGDB + "\\Day6_Std", analysisGDB + "\\day6_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day6_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day6_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day6"
                    cursor.updateRow(row)

            # day 7
            arcpy.Statistics_analysis(analysisGDB + "\\Day7_Std", analysisGDB + "\\day7_STDMax_stats",
                                      [["gust_max", "MAX"], ["wind_mean", "MAX"], ["asnow_sfc_", "MAX"]])
            print("stats calculated")
            arcpy.AddField_management(analysisGDB + "\\day7_STDMax_stats", "Day", "TEXT", "", "", "10", "Day")
            print("field added")
            with arcpy.da.UpdateCursor(analysisGDB + "\\day7_STDMax_stats", "Day") as cursor:
                for row in cursor:
                    row[0] = "Day7"
                    cursor.updateRow(row)
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
    # merge mean stats on standardized data
    try:
        # mean stats
        try:
            arcpy.Merge_management([analysisGDB + "\\day0_STDMean_stats", analysisGDB + "\\day1_STDMean_stats",
                                    analysisGDB + "\\day2_STDMean_stats", analysisGDB + "\\day3_STDMean_stats",
                                    analysisGDB + "\\day4_STDMean_stats", analysisGDB + "\\day5_STDMean_stats",
                                    analysisGDB + "\\day6_STDMean_stats", analysisGDB + "\\day7_STDMean_stats"],
                                   analysisGDB + "\\Mean_STD_Stats")
            print("mean stats merged")
            # max statistics

            arcpy.Merge_management([analysisGDB + "\\day0_STDMin_stats", analysisGDB + "\\day1_STDMin_stats",
                                    analysisGDB + "\\day2_STDMin_stats", analysisGDB + "\\day3_STDMin_stats",
                                    analysisGDB + "\\day4_STDMin_stats", analysisGDB + "\\day5_STDMin_stats",
                                    analysisGDB + "\\day6_STDMin_stats", analysisGDB + "\\day7_STDMin_stats"],
                                   analysisGDB + "\\Min_STD_Stats")
            print("min stats merged")

            # merge max snow stats
            arcpy.Merge_management([analysisGDB + "\\day0_STDMax_stats", analysisGDB + "\\day1_STDMax_stats",
                                    analysisGDB + "\\day2_STDMax_stats", analysisGDB + "\\day3_STDMax_stats",
                                    analysisGDB + "\\day4_STDMax_stats", analysisGDB + "\\day5_STDMax_stats",
                                    analysisGDB + "\\day6_STDMax_stats", analysisGDB + "\\day7_STDMax_stats"],
                                   analysisGDB + "\\Max_STD_Stats")
            print("max stats merged")
        except Exception as ex:
            print(ex)
        try:
            arcpy.Delete_management([analysisGDB + "\\day0_STDMax_stats", analysisGDB + "\\day1_STDMax_stats",
                                     analysisGDB + "\\day2_STDMax_stats", analysisGDB + "\\day3_STDMax_stats",
                                     analysisGDB + "\\day4_STDMax_stats", analysisGDB + "\\day5_STDMax_stats",
                                     analysisGDB + "\\day6_STDMax_stats", analysisGDB + "\\day7_STDMax_stats",
                                     analysisGDB + "\\day0_STDMean_stats", analysisGDB + "\\day1_STDMean_stats",
                                     analysisGDB + "\\day2_STDMean_stats", analysisGDB + "\\day3_STDMean_stats",
                                     analysisGDB + "\\day4_STDMean_stats", analysisGDB + "\\day5_STDMean_stats",
                                     analysisGDB + "\\day6_STDMean_stats", analysisGDB + "\\day7_STDMean_stats",
                                     analysisGDB + "\\day0_STDMin_stats", analysisGDB + "\\day1_STDMin_stats",
                                     analysisGDB + "\\day2_STDMin_stats", analysisGDB + "\\day3_STDMin_stats",
                                     analysisGDB + "\\day4_STDMin_stats", analysisGDB + "\\day5_STDMin_stats",
                                     analysisGDB + "\\day6_STDMin_stats", analysisGDB + "\\day7_STDMin_stats"])
            print("delete intermediary files ")
        except Exception as ex:
            print(ex)
    except Exception as ex:
        print(ex)
except Exception as ex:
    print(ex)
